% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SlangPipe.R
\docType{class}
\name{SlangPipe}
\alias{SlangPipe}
\title{Class to find and/or replace the slangs on the data of an instance}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
SlangPipe$new(propertyName = "langpropname",
              propertyLanguageName = "language",
              pathResourcesSlangs = "resources/slangs-json",
              alwaysBeforeDeps = list("GuessLanguagePipe"),
              notAfterDeps = list())
}
\arguments{
\item{propertyName}{(character) Name of the property associated with the pipe.}

\item{propertyLanguageName}{(character) Name of the language property.}

\item{pathResourcesSlangs}{(character) Path where are stored the slangs
resources.}

\item{alwaysBeforeDeps}{(list) The dependences alwaysBefore (pipes that must
be executed before this one).}

\item{notAfterDeps}{(list) The dependences notAfter (pipes that cannot be
executed after this one).}
}
\description{
This class allows you to preprocess the data of an instance to
find the slangs that are in it. Optionally, you can decide whether to
delete the data slangs or not.
}
\details{
This class needs files in json format that will contain the slangs
to be located and the string that will replace them. For this it is necessary
that the instance contains a property that indicates the language of the data
to be able to correctly choose the list of slangs that apply to the data.
The format of the file names of the resources has to be: slang.xxx.json
(Being xxx the value of the language property of the instance).

The pipe will invalidate the instance in the moment that the resulting data is
empty.
}
\section{Inherit}{

This class inherits from \code{\link{PipeGeneric}} and implements the
\code{pipe} abstract function.
}

\section{Methods}{

\itemize{
\item{\bold{pipe}}{
Function that preprocesses the instance to obtain/replace the slangs.
The slangs found in the pipe are added to the list of properties of the
Instance. If the replaceSlangs parameter is TRUE, the instance data will be
modified by replacing the slangs found.
\itemize{
\item{\emph{Usage}}{

\code{pipe(instance, replaceSlangs = TRUE)}
}
\item{\emph{Value}}{

The instance with the modifications that have occurred in the pipe.
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{instance}}{
(Instance) Instance to preproccess.
}
\item{\strong{replaceSlangs}}{
(logical) Indicate if the slangs are replace or not.
}
}
}
}
}

\item{\bold{findSlang}}{
Function that checks if the slang is in the data.
\itemize{
\item{\emph{Usage}}{

\code{findSlang(data, slang)}
}
\item{\emph{Value}}{

TRUE or FALSE depending on whether the slang is on the data.
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{data}}{
(character) Text to preproccess.
}
\item{\strong{slang}}{
(character) Indicate the slang to find.
}
}
}
}
}

\item{\bold{replaceSlang}}{
Function that replaces the slang in the data for the extendedSlang.
\itemize{
\item{\emph{Usage}}{

\code{replaceSlang(slang, extendedSlang, data)}
}
\item{\emph{Value}}{

The data with slangs replaced.
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{slang}}{
(character) Indicate the slang to replace.
}
\item{\strong{extendedSlang}}{
(character) Indicate the string to replace for the slangs found.
}
\item{\strong{data}}{
(character) Text in which slangs will be replaced.
}
}
}
}
}

\item{\bold{getPropertyLanguageName}}{
Getter of name of property language.
\itemize{
\item{\emph{Usage}}{

\code{getPropertyLanguageName()}
}
\item{\emph{Value}}{

Value of name of property language.
}
}
}

\item{\bold{getPathResourcesSlangs}}{
Getter of path of slangs resources.
\itemize{
\item{\emph{Usage}}{

\code{getPathResourcesSlangs()}
}
\item{\emph{Value}}{

Value of path of slangs resources.
}
}
}
}
}

\section{Private fields}{

\itemize{
\item{\bold{propertyLanguageName}}{
 (character) The name of property about language.
}
\item{\bold{pathResourcesSlangs}}{
 (character) The path where are the resources.
}
}
}

\seealso{
\code{\link{PipeGeneric}}, \code{\link{Instance}},
\code{\link{ResourceHandler}}
}
\keyword{datasets}
