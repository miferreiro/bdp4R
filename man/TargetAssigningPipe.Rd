% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TargetAssigningPipe.R
\docType{class}
\name{TargetAssigningPipe}
\alias{TargetAssigningPipe}
\title{Class to get the target of the instance}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
TargetAssigningPipe$new(targets = list("ham","spam"),
                        targetsName = list("_ham_","_spam_"),
                        propertyName = "target",
                        alwaysBeforeDeps = list(),
                        notAfterDeps = list())
}
\arguments{
\item{targets}{(list) Name of the targets property.}

\item{targetsName}{(list) The name of folders.}

\item{propertyName}{(character) Name of the property associated with the pipe.}

\item{alwaysBeforeDeps}{(list) The dependences alwaysBefore (pipes that must
be executed before this one).}

\item{notAfterDeps}{(list) The dependences notAfter (pipes that cannot be
executed after this one).}
}
\description{
This class allows searching in the path the target of the
instance.
}
\details{
The targets that are searched can be controlled through the
constructor of the class where targetsName will be the string that is
searched within the path and targets has the values that the property can
take.
}
\section{Inherit}{

This class inherits from \code{\link{PipeGeneric}} and implements the
\code{pipe} abstract function.
}

\section{Methods}{

\itemize{
\item{\bold{pipe}}{
Function that preprocesses the instance to obtain the target.
\itemize{
\item{\emph{Usage}}{

\code{pipe(instance)}
}
\item{\emph{Value}}{

The instance with the modifications that have occurred in the pipe.
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{instance}}{
(Instance) Instance to preproccess.
}
}
}
}
}

\item{\bold{getTarget}}{
Function to gets the target from a path.
\itemize{
\item{\emph{Usage}}{

\code{getTarget(path)}
}
\item{\emph{Value}}{

The target of the path.
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{path}}{
(character) Path to analize.
}
}
}
}
}

\item{\bold{checkTarget}}{
Function to checks if the target is in the path.
\itemize{
\item{\emph{Usage}}{

\code{checkTarget(target, path)}
}
\item{\emph{Value}}{

If the target is found, returns target, else returns "".
}
\item{\emph{Arguments}}{
\itemize{
\item{\strong{target}}{
(character) Target to find in the path.
}
\item{\strong{path}}{
(character) Path to analize.
}
}
}
}
}

\item{\bold{getTargets}}{
Getter of targets.
\itemize{
\item{\emph{Usage}}{

\code{getTargets()}
}
\item{\emph{Value}}{

Value of targets.
}
}
}
}
}

\section{Private fields}{

\itemize{
\item{\bold{targets}}{
 (list) Name of the targets property.
}
}
}

\seealso{
\code{\link{PipeGeneric}}, \code{\link{Instance}}
}
\keyword{datasets}
